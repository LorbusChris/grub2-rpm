From fe6b1111aa9d842524c01196b4d0533a20a1a367 Mon Sep 17 00:00:00 2001
From: Peter Jones <pjones@redhat.com>
Date: Wed, 3 Sep 2014 10:38:00 -0400
Subject: [PATCH 123/225] Make editenv chase symlinks including those across
 devices.

This lets us make /boot/grub2/grubenv a symlink to
/boot/efi/EFI/fedora/grubenv even though they're different mount points,
which allows /usr/bin/grub2-editenv to be the same across platforms
(i.e. UEFI vs BIOS).

Signed-off-by: Peter Jones <pjones@redhat.com>
Reviewed-by: Adam Jackson <ajax@redhat.com>

This version also merges in:
f1f67e3fc editenv: handle relative symlinks

Handle symlinks with targets relative to the containing dir. This
ensures that the rename operation does not depend on the cwd.

Resolves: rhbz#1479960

Signed-off-by: Jonathan Lebon <jlebon@redhat.com>
---
 Makefile.util.def |  9 +++++++++
 util/editenv.c    | 58 +++++++++++++++++++++++++++++++++++++++++++++++++++++--
 2 files changed, 65 insertions(+), 2 deletions(-)

diff --git a/Makefile.util.def b/Makefile.util.def
index f9caccb97..e7410494b 100644
--- a/Makefile.util.def
+++ b/Makefile.util.def
@@ -230,8 +230,17 @@ program = {
 
   common = util/grub-editenv.c;
   common = util/editenv.c;
+  common = util/grub-install-common.c;
   common = grub-core/osdep/init.c;
+  common = grub-core/osdep/compress.c;
+  extra_dist = grub-core/osdep/unix/compress.c;
+  extra_dist = grub-core/osdep/basic/compress.c;
+  common = util/mkimage.c;
+  common = grub-core/osdep/config.c;
+  common = util/config.c;
+  common = util/resolve.c;
 
+  ldadd = '$(LIBLZMA)';
   ldadd = libgrubmods.a;
   ldadd = libgrubgcry.a;
   ldadd = libgrubkern.a;
diff --git a/util/editenv.c b/util/editenv.c
index c6f8d2298..41bc7cb1c 100644
--- a/util/editenv.c
+++ b/util/editenv.c
@@ -28,6 +28,7 @@
 
 #include <errno.h>
 #include <string.h>
+#include <libgen.h>
 
 #define DEFAULT_ENVBLK_SIZE	1024
 
@@ -37,6 +38,7 @@ grub_util_create_envblk_file (const char *name)
   FILE *fp;
   char *buf;
   char *namenew;
+  char *rename_target = xstrdup(name);
 
   buf = xmalloc (DEFAULT_ENVBLK_SIZE);
 
@@ -59,7 +61,59 @@ grub_util_create_envblk_file (const char *name)
   free (buf);
   fclose (fp);
 
-  if (grub_util_rename (namenew, name) < 0)
-    grub_util_error (_("cannot rename the file %s to %s"), namenew, name);
+  ssize_t size = 1;
+  while (1)
+    {
+      char *linkbuf;
+      ssize_t retsize;
+
+      linkbuf = xmalloc(size+1);
+      retsize = grub_util_readlink (rename_target, linkbuf, size);
+      if (retsize < 0 && (errno == ENOENT || errno == EINVAL))
+	{
+	  free (linkbuf);
+	  break;
+	}
+      else if (retsize < 0)
+	{
+	  grub_util_error (_("cannot rename the file %s to %s: %m"), namenew, name);
+	  free (linkbuf);
+	  free (namenew);
+	  return;
+	}
+      else if (retsize == size)
+	{
+	  free(linkbuf);
+	  size += 128;
+	  continue;
+	}
+
+      linkbuf[retsize] = '\0';
+      if (linkbuf[0] == '/')
+        {
+          free (rename_target);
+          rename_target = linkbuf;
+        }
+      else
+        {
+          char *dbuf = xstrdup (rename_target);
+          const char *dir = dirname (dbuf);
+          free (rename_target);
+          rename_target = xasprintf("%s/%s", dir, linkbuf);
+          free (dbuf);
+        }
+    }
+
+  int rc = grub_util_rename (namenew, rename_target);
+  if (rc < 0 && errno == EXDEV)
+    {
+      rc = grub_install_copy_file (namenew, rename_target, 1);
+      grub_util_unlink (namenew);
+    }
+
+  if (rc < 0)
+    grub_util_error (_("cannot rename the file %s to %s: %m"), namenew, name);
+
   free (namenew);
+  free (rename_target);
 }
-- 
2.14.3

